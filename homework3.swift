/* Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят 
заказать чай (можно представить ее в виде массива видов чая, которые хотят заказать). 
Необходимо последовательно выводить в консоль сколько заплатит покупатель 
( необходимо вывести его номер по порядку, чай, который он заказал и стоимость) */

enum Tea {
    case black
    case green
    case fruit
}

let tea: [Tea: Double] = [.black: 100, .green: 120, .fruit: 150]
let purchases: [Tea] = [.fruit, .black, .green, .black, .fruit] // очередь

for (index, item) in purchases.enumerated() {
    print("Номер: \(index), чай: \(item), стоимость: \(tea[item])")    
}


/* Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. 
Необходимо создать новый массив, который будет состоять из элементов старого, но 
не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован 
по возрастанию */

let arr = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
let newArr = arr.compactMap {$0}.filter {$0 != 0 && $0 != 4}.sorted {$0 < $1}

/* Написать функцию, которая на вход принимает целое число, а возвращает массив, 
который сформирован по следующим правилам: количество элементов соответствует 
переданному числу, массив начинается с 1, каждый последующий элемент больше 
предыдущего в 2 раза. */


func arr(a: Int = 10) -> [Int] {
    var newArr: [Int] = []
    newArr.append(1)
    for i in 1...a {
        newArr.append(newArr[i-1] * 2)     
    }
    return newArr 
}
